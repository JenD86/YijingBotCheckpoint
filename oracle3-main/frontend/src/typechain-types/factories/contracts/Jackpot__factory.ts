/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Jackpot, JackpotInterface } from "../../contracts/Jackpot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "windowTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "GameInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAWinner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTicketOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OperatorRoleRequired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "ServiceTemporarilyUnavailable",
    type: "error",
  },
  {
    inputs: [],
    name: "TicketNotInTheGame",
    type: "error",
  },
  {
    inputs: [],
    name: "TicketPurchased",
    type: "error",
  },
  {
    inputs: [],
    name: "WonTicketAlreadySet",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slotNo",
        type: "uint256",
      },
    ],
    name: "Purchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isOperator",
        type: "bool",
      },
    ],
    name: "SetOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "SettingsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "WonTicket",
    type: "event",
  },
  {
    inputs: [],
    name: "START_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WINDOW_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gameSlots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "games",
    outputs: [
      {
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numOfTickets",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "wonTicketId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSettings",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "percentage",
            type: "uint256",
          },
        ],
        internalType: "struct Jackpot.Distribution[]",
        name: "info",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "getTicketId",
    outputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fundingAmount",
        type: "uint256",
      },
    ],
    name: "initPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isPending",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "operators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purchase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isOperator",
        type: "bool",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setPending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "setWinningTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tickets",
    outputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "percentage",
            type: "uint256",
          },
        ],
        internalType: "struct Jackpot.Distribution[]",
        name: "info",
        type: "tuple[]",
      },
    ],
    name: "updateSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200163d3803806200163d8339810160408190526200003491620000f9565b836001600160a01b0381166200006457604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200006f816200008c565b5060809290925260a0526001600160a01b031660c0525062000144565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000f457600080fd5b919050565b600080600080608085870312156200011057600080fd5b6200011b85620000dc565b935060208501519250604085015191506200013960608601620000dc565b905092959194509250565b60805160a05160c05161148a620001b3600039600081816102ca015281816105ba015281816107d10152610a2801526000818161034301528181610af40152610e830152600081816103bd015281816106a101528181610b1e01528181610c9b0152610ea7015261148a6000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806382bfefc8116100b85780639c30ad7e1161007c5780639c30ad7e146103655780639d1ac69e14610372578063a26354011461039d578063aaf26dcc146103a5578063ddaa26ad146103b8578063f2fde38b146103df57600080fd5b806382bfefc8146102c557806385b4bb53146103045780638ae3beb21461031a5780638da5cb5b1461032d5780638e1234a61461033e57600080fd5b8063558a72971161010a578063558a72971461024e57806364edfbf014610261578063715018a61461026957806373282128146102715780637ac056ce146102845780637ecebe001461029757600080fd5b8063117a5b901461014757806313e7c9d8146101a6578063323a7e99146101d9578063379607f5146101ee57806350b4471214610201575b600080fd5b61017f610155366004611121565b60056020526000908152604090208054600182015460028301546003909301549192909160ff1684565b60408051948552602085019390935291830152151560608201526080015b60405180910390f35b6101c96101b4366004611156565b60036020526000908152604090205460ff1681565b604051901515815260200161019d565b6101ec6101e7366004611171565b6103f2565b005b6101ec6101fc366004611121565b6104c4565b61023161020f366004611121565b600660205260009081526040902080546001909101546001600160a01b031682565b604080519283526001600160a01b0390911660208301520161019d565b6101ec61025c3660046111fe565b61062c565b6101ec610693565b6101ec6109c6565b6101ec61027f366004611235565b6109da565b6101ec61029236600461125f565b610a78565b6102b76102a5366004611156565b60046020526000908152604090205481565b60405190815260200161019d565b6102ec7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161019d565b61030c610bf7565b60405161019d929190611281565b6101ec6103283660046112e2565b610c7c565b6000546001600160a01b03166102ec565b6102b77f000000000000000000000000000000000000000000000000000000000000000081565b6008546101c99060ff1681565b6102b761038036600461125f565b600760209081526000928352604080842090915290825290205481565b6102b7610c97565b6102b76103b3366004611235565b610cd4565b6102b77f000000000000000000000000000000000000000000000000000000000000000081565b6101ec6103ed366004611156565b610ce9565b3360009081526003602052604090205460ff16610422576040516364d6181d60e01b815260040160405180910390fd5b61042e600260006110db565b61048a838383808060200260200160405190810160405280939291908181526020016000905b8282101561048057610471604083028601368190038101906112ff565b81526020019060010190610454565b5050505050610d2c565b60405183815233907f45dd6732600be3007c97969ed0ecd5170556bd0a167a4b61f3497a1e21c631a89060200160405180910390a2505050565b60008181526006602081815260408084208054808652600584528286208351608081018552815481526001808301548288015260028301549582019590955260039091015460ff1615156060820152958790529390925201543392906001600160a01b031683146105485760405163e18d39ad60e01b815260040160405180910390fd5b8381604001511461056c576040516358cd4fc160e11b815260040160405180910390fd5b80606001511561058f57604051630c8d9eab60e31b815260040160405180910390fd5b6000828152600560205260409020600301805460ff1916600117905580516105e16001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168583610db5565b82846001600160a01b03167f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a8360405161061d91815260200190565b60405180910390a35050505050565b610634610e19565b6001600160a01b038216600081815260036020908152604091829020805460ff191685151590811790915591519182527f1618a22a3b00b9ac70fd5a82f1f5cdd8cb272bd0f1b740ddf7c26ab05881dd5b910160405180910390a25050565b60085460ff16806106c357507f000000000000000000000000000000000000000000000000000000000000000042105b156106e1576040516332bf5d6560e21b815260040160405180910390fd5b6000339050600060018001805480602002602001604051908101604052809291908181526020016000905b82821015610754576000848152602090819020604080518082019091526002850290910180546001600160a01b0316825260019081015482840152908352909201910161070c565b50506001548351939450929150600090505b8181101561080b576107f98585838151811061078457610784611364565b602002602001015160000151620f4240868886815181106107a7576107a7611364565b6020026020010151602001516107bd9190611390565b6107c791906113a7565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016929190610e46565b80610803816113c9565b915050610766565b506000610816610e7f565b600081815260056020526040812060010154865192935091620f424091869188919061084457610844611364565b60200260200101516020015161085a9190611390565b61086491906113a7565b600083815260056020526040812080549091906108829084906113e2565b9091555061089390508160016113e2565b6000838152600560209081526040808320600101939093556001600160a01b038916825260049052908120546108ca908890610ee1565b600081815260066020526040902054909150156108fa576040516308fdf33d60e21b815260040160405180910390fd5b6040805180820182528481526001600160a01b038981166020808401828152600087815260068352868120955186559051600190950180546001600160a01b031916959094169490941790925582526004905290812080549161095c836113c9565b909155505060008381526007602090815260408083208584528252918290208390559051838152849183916001600160a01b038b16917f2bdd59583c8e5cc64165e86af2482dbe93e85c98b355b788aa592465b3f6920e910160405180910390a450505050505050565b6109ce610e19565b6109d86000610f1f565b565b6109e2610e19565b600854610100900460ff1615610a0a5760405162dc149f60e41b815260040160405180910390fd5b6008805461ff0019166101001790556001610a506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016843085610e46565b60008181526005602052604081208054849290610a6e9084906113e2565b9091555050505050565b3360009081526003602052604090205460ff16610aa8576040516364d6181d60e01b815260040160405180910390fd5b60008281526005602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460ff1615156060820152610b18837f0000000000000000000000000000000000000000000000000000000000000000611390565b610b42907f00000000000000000000000000000000000000000000000000000000000000006113e2565b421015610b6257604051633497d0d160e21b815260040160405180910390fd5b6000828152600660205260409020548314610b90576040516330027c5f60e21b815260040160405180910390fd5b604081015115610bb357604051637b969c4760e01b815260040160405180910390fd5b600083815260056020526040808220600201849055518391859133917f9ca85eb9b7a6df68b8b7276a111de803adf418e2fb7436723f28e999977fa1f491a4505050565b600060606001600001546001800180805480602002602001604051908101604052809291908181526020016000905b82821015610c6e576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610c26565b505050509050915091509091565b610c84610e19565b6008805460ff1916911515919091179055565b60007f0000000000000000000000000000000000000000000000000000000000000000421015610cc75750600190565b610ccf610e7f565b905090565b6000610ce08383610ee1565b90505b92915050565b610cf1610e19565b6001600160a01b038116610d2057604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610d2981610f1f565b50565b6001829055805160005b81811015610daf5760018001838281518110610d5457610d54611364565b602090810291909101810151825460018082018555600094855293839020825160029092020180546001600160a01b0319166001600160a01b0390921691909117815591015191015580610da7816113c9565b915050610d36565b50505050565b6040516001600160a01b03838116602483015260448201839052610e1491859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610f6f565b505050565b6000546001600160a01b031633146109d85760405163118cdaa760e01b8152336004820152602401610d17565b6040516001600160a01b038481166024830152838116604483015260648201839052610daf9186918216906323b872dd90608401610de2565b60007f0000000000000000000000000000000000000000000000000000000000000000610ecc7f0000000000000000000000000000000000000000000000000000000000000000426113f5565b610ed691906113a7565b610ccf9060016113e2565b60408051306020808301919091526001600160a01b039490941681830152606080820193909352815180820390930183526080019052805191012090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610f846001600160a01b03841683610fd2565b90508051600014158015610fa9575080806020019051810190610fa79190611408565b155b15610e1457604051635274afe760e01b81526001600160a01b0384166004820152602401610d17565b6060610ce08383600084600080856001600160a01b03168486604051610ff89190611425565b60006040518083038185875af1925050503d8060008114611035576040519150601f19603f3d011682016040523d82523d6000602084013e61103a565b606091505b509150915061104a868383611056565b925050505b9392505050565b60608261106b57611066826110b2565b61104f565b815115801561108257506001600160a01b0384163b155b156110ab57604051639996b31560e01b81526001600160a01b0385166004820152602401610d17565b508061104f565b8051156110c25780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5080546000825560020290600052602060002090810190610d2991905b8082111561111d5780546001600160a01b0319168155600060018201556002016110f8565b5090565b60006020828403121561113357600080fd5b5035919050565b80356001600160a01b038116811461115157600080fd5b919050565b60006020828403121561116857600080fd5b610ce08261113a565b60008060006040848603121561118657600080fd5b83359250602084013567ffffffffffffffff808211156111a557600080fd5b818601915086601f8301126111b957600080fd5b8135818111156111c857600080fd5b8760208260061b85010111156111dd57600080fd5b6020830194508093505050509250925092565b8015158114610d2957600080fd5b6000806040838503121561121157600080fd5b61121a8361113a565b9150602083013561122a816111f0565b809150509250929050565b6000806040838503121561124857600080fd5b6112518361113a565b946020939093013593505050565b6000806040838503121561127257600080fd5b50508035926020909101359150565b6000604080830185845260208281860152818651808452606087019150828801935060005b818110156112d457845180516001600160a01b031684528401518484015293830193918501916001016112a6565b509098975050505050505050565b6000602082840312156112f457600080fd5b813561104f816111f0565b60006040828403121561131157600080fd5b6040516040810181811067ffffffffffffffff8211171561134257634e487b7160e01b600052604160045260246000fd5b60405261134e8361113a565b8152602083013560208201528091505092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ce357610ce361137a565b6000826113c457634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016113db576113db61137a565b5060010190565b80820180821115610ce357610ce361137a565b81810381811115610ce357610ce361137a565b60006020828403121561141a57600080fd5b815161104f816111f0565b6000825160005b81811015611446576020818601810151858301520161142c565b50600092019182525091905056fea2646970667358221220f04bf103649949149018016a60782d3b8dfd45a9f242c7c2028ff2df67592ce464736f6c63430008140033";

type JackpotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JackpotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Jackpot__factory extends ContractFactory {
  constructor(...args: JackpotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initOwner: AddressLike,
    startTime: BigNumberish,
    windowTime: BigNumberish,
    token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initOwner,
      startTime,
      windowTime,
      token,
      overrides || {}
    );
  }
  override deploy(
    initOwner: AddressLike,
    startTime: BigNumberish,
    windowTime: BigNumberish,
    token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initOwner,
      startTime,
      windowTime,
      token,
      overrides || {}
    ) as Promise<
      Jackpot & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Jackpot__factory {
    return super.connect(runner) as Jackpot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JackpotInterface {
    return new Interface(_abi) as JackpotInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Jackpot {
    return new Contract(address, _abi, runner) as unknown as Jackpot;
  }
}
