/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Charms, CharmsInterface } from "../../contracts/Charms";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "percentage",
            type: "uint256",
          },
        ],
        internalType: "struct Charms.Distribution[]",
        name: "info",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000d8a38038062000d8a833981016040819052620000349162000322565b6040518060400160405280600d81526020016c1221a420a926a9902a37b5b2b760991b8152506040518060400160405280600781526020016624434841524d5360c81b81525081600390816200008b9190620004af565b5060046200009a8282620004af565b5050506080829052805160005b818110156200012f576200011a838281518110620000c957620000c96200057b565b602002602001015160000151612710608051868581518110620000f057620000f06200057b565b602002602001015160200151620001089190620005a7565b620001149190620005c7565b62000139565b806200012681620005ea565b915050620000a7565b505050506200061c565b6001600160a01b038216620001695760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b62000177600083836200017b565b5050565b6001600160a01b038316620001aa5780600260008282546200019e919062000606565b909155506200021e9050565b6001600160a01b03831660009081526020819052604090205481811015620001ff5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640162000160565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166200023c576002805482900390556200025b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002a191815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715620002e957620002e9620002ae565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200031a576200031a620002ae565b604052919050565b60008060408084860312156200033757600080fd5b8351602080860151919450906001600160401b03808211156200035957600080fd5b818701915087601f8301126200036e57600080fd5b815181811115620003835762000383620002ae565b62000393848260051b01620002ef565b818152848101925060069190911b830184019089821115620003b457600080fd5b928401925b81841015620004105785848b031215620003d35760008081fd5b620003dd620002c4565b84516001600160a01b0381168114620003f65760008081fd5b8152848601518682015283529285019291840191620003b9565b8096505050505050509250929050565b600181811c908216806200043557607f821691505b6020821081036200045657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004aa57600081815260208120601f850160051c81016020861015620004855750805b601f850160051c820191505b81811015620004a65782815560010162000491565b5050505b505050565b81516001600160401b03811115620004cb57620004cb620002ae565b620004e381620004dc845462000420565b846200045c565b602080601f8311600181146200051b5760008415620005025750858301515b600019600386901b1c1916600185901b178555620004a6565b600085815260208120601f198616915b828110156200054c578886015182559484019460019091019084016200052b565b50858210156200056b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417620005c157620005c162000591565b92915050565b600082620005e557634e487b7160e01b600052601260045260246000fd5b500490565b600060018201620005ff57620005ff62000591565b5060010190565b80820180821115620005c157620005c162000591565b60805161075262000638600039600061011d01526107526000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806332cb6b0c1161006657806332cb6b0c1461011857806370a082311461013f57806395d89b4114610168578063a9059cbb14610170578063dd62ed3e1461018357600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100f6578063313ce56714610109575b600080fd5b6100ab6101bc565b6040516100b8919061059c565b60405180910390f35b6100d46100cf366004610606565b61024e565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d4610104366004610630565b610268565b604051601281526020016100b8565b6100e87f000000000000000000000000000000000000000000000000000000000000000081565b6100e861014d36600461066c565b6001600160a01b031660009081526020819052604090205490565b6100ab61028c565b6100d461017e366004610606565b61029b565b6100e861019136600461068e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101cb906106c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101f7906106c1565b80156102445780601f1061021957610100808354040283529160200191610244565b820191906000526020600020905b81548152906001019060200180831161022757829003601f168201915b5050505050905090565b60003361025c8185856102a9565b60019150505b92915050565b6000336102768582856102bb565b61028185858561033e565b506001949350505050565b6060600480546101cb906106c1565b60003361025c81858561033e565b6102b6838383600161039d565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610338578181101561032957604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103388484848403600061039d565b50505050565b6001600160a01b03831661036857604051634b637e8f60e11b815260006004820152602401610320565b6001600160a01b0382166103925760405163ec442f0560e01b815260006004820152602401610320565b6102b6838383610472565b6001600160a01b0384166103c75760405163e602df0560e01b815260006004820152602401610320565b6001600160a01b0383166103f157604051634a1406b160e11b815260006004820152602401610320565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561033857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161046491815260200190565b60405180910390a350505050565b6001600160a01b03831661049d57806002600082825461049291906106fb565b9091555061050f9050565b6001600160a01b038316600090815260208190526040902054818110156104f05760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610320565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661052b5760028054829003905561054a565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161058f91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156105c9578581018301518582016040015282016105ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461060157600080fd5b919050565b6000806040838503121561061957600080fd5b610622836105ea565b946020939093013593505050565b60008060006060848603121561064557600080fd5b61064e846105ea565b925061065c602085016105ea565b9150604084013590509250925092565b60006020828403121561067e57600080fd5b610687826105ea565b9392505050565b600080604083850312156106a157600080fd5b6106aa836105ea565b91506106b8602084016105ea565b90509250929050565b600181811c908216806106d557607f821691505b6020821081036106f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026257634e487b7160e01b600052601160045260246000fdfea264697066735822122064c0561fea90cbd9c528d7f03b93b5b98199cf01c6ceb93cbc94a524ec39e55264736f6c63430008140033";

type CharmsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CharmsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Charms__factory extends ContractFactory {
  constructor(...args: CharmsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    maxSupply: BigNumberish,
    info: Charms.DistributionStruct[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(maxSupply, info, overrides || {});
  }
  override deploy(
    maxSupply: BigNumberish,
    info: Charms.DistributionStruct[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(maxSupply, info, overrides || {}) as Promise<
      Charms & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Charms__factory {
    return super.connect(runner) as Charms__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CharmsInterface {
    return new Interface(_abi) as CharmsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Charms {
    return new Contract(address, _abi, runner) as unknown as Charms;
  }
}
